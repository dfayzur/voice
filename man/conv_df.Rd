% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conv_df.R
\name{conv_df}
\alias{conv_df}
\title{Convolute data frames.}
\usage{
conv_df(
  x,
  compact.to,
  colnum = NULL,
  id = "id",
  by.filter = id,
  drop.zeros = T,
  to.data.frame = T,
  mc.cores = parallel::detectCores()
)
}
\arguments{
\item{\code{x}}{A data frame.}

\item{\code{compact.to}}{Percentage of remaining points after compactation. If equals to 1 and keep.zeros = T, the original vector is presented.}

\item{\code{columns}}{A \code{char} vector indicating the colnames. If \code{NULL}, uses the columns of the \code{numeric} class.}

\item{\code{by.filter}}{A \code{char} indicating the column to filter by. If \code{NULL} the filter is off.}

\item{\code{drop.zeros}}{Logical. Drop repeated zeros or compress to 1 zero per null set?}

\item{\code{to.data.frame}}{Logical. Should the return be a data frame? If \code{F} returns a list.}

\item{\code{mc.cores}}{The number of cores to mclapply.}
}
\value{
A vector of convoluted values with length near to \code{compact.to*length(x)}.
}
\description{
Convolute data frames.
}
\examples{
library(voice)
x <- dat \%>\%
mutate_each(as.factor, id:anyep_diff_w1)
conv_df(x, 0.1)
}
\seealso{
\code{conv}, \code{conv_mc}
}
