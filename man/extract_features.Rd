% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/extract_features.R
\name{extract_features}
\alias{extract_features}
\title{Extracts 1093 features from WAV or MP3 audio.}
\usage{
extract_features(
  x,
  gender = "u",
  windowShift = 5,
  numFormants = 8,
  numcep = 12,
  dcttype = c("t2", "t1", "t3", "t4"),
  fbtype = c("mel", "htkmel", "fcmel", "bark"),
  resolution = 40,
  usecmp = FALSE,
  mc.cores = parallel::detectCores(),
  convert.mp3 = FALSE,
  dest.path = NULL,
  full.names = TRUE,
  recursive = FALSE,
  as.tibble = TRUE
)
}
\arguments{
\item{\code{x}}{A directory containing audio file(s) in WAV or MP3 formats. If more than one directory is provided, only the first one is used.}

\item{\code{gender}}{= <code>: set gender specific parameters where <code> = 'f'[emale], 'm'[ale] or 'u'[nknown] (default: 'u'). Used by \code{wrassp::ksvF0}, \code{wrassp::forest} and \code{wrassp::mhsF0}.}

\item{\code{windowShift}}{= <dur>: set analysis window shift to <dur>ation in ms (default: 5.0). Used by \code{wrassp::ksvF0}, \code{wrassp::forest}, \code{wrassp::mhsF0}, \code{wrassp::zcrana}, \code{wrassp::rmsana}, \code{wrassp::rfcana}, \code{wrassp::acfana}, \code{wrassp::cepstrum}, \code{wrassp::dftSpectrum}, \code{wrassp::cssSpectrum} and \code{wrassp::lpsSpectrum}.}

\item{\code{numFormants}}{= <num>: <num>ber of formants (default: 8). Used by \code{wrassp::forest}.}

\item{\code{numcep}}{Number of Mel-frequency cepstral coefficients (cepstra) to return (default: 12). Used by \code{tuneR::melfcc}.}

\item{\code{dcttype}}{Type of DCT used. 't1' or 't2', 't3' for HTK 't4' for feacalc (default = 't2'). Used by \code{tuneR::melfcc}.}

\item{\code{fbtype}}{Auditory frequency scale to use: \code{'mel'}, \code{'bark'}, \code{'htkmel'}, \code{'fcmel'} (default: \code{'mel'}). Used by \code{tuneR::melfcc}.}

\item{\code{resolution}}{= <freq>: set FFT length to the smallest value which results in a frequency resolution of <freq> Hz or better (default: 40.0). Used by \code{wrassp::cssSpectrum}, \code{wrassp::dftSpectrum} and \code{wrassp::lpsSpectrum}.}

\item{\code{usecmp}.}{Logical. Apply equal-loudness weighting and cube-root compression (PLP instead of LPC) (default: \code{FALSE}). Used by \code{tuneR::melfcc}.}

\item{\code{mc.cores}}{Number of cores to be used in parallel processing. (default: \code{parallel::detectCores()})}

\item{\code{convert.mp3}}{Logical. Should .mp3 files be converted to .wav? (default: \code{FALSE}) Used by \code{warbleR::mp32wav}.}

\item{\code{dest.path}}{Character string containing the directory path where the .wav files will be saved. If \code{NULL} (default) then the folder containing the sound files will be used. Used by \code{warbleR::mp32wav}.}

\item{\code{full.names}}{Logical. If \code{TRUE}, the directory path is prepended to the file names to give a relative file path. If \code{FALSE}, the file names (rather than paths) are returned. (default: \code{TRUE}) Used by \code{base::list.files}.}

\item{\code{recursive}}{Logical. Should the listing recurse into directories? (default: \code{FALSE}) Used by \code{base::list.files}.}

\item{\code{as.tibble}}{Logical. Sould the output be a tibble or a data frame? (default: \code{TRUE})}
}
\description{
Extracts 1093 features from WAV or MP3 audio.
}
\examples{
library(voice)

# get path to audio file
path2wav <- list.files(system.file("extdata", package = "wrassp"),
pattern = glob2rx("*.wav"),
full.names = TRUE)
# calculate fundamental frequency contour
ef <- extract_features(dirname(path2wav))
ef
}
